class Solution {
    // Function to sort a linked list of 0s, 1s and 2s.
    static Node segregate(Node head) {
        if ( head == null || head.next == null){
            return head;
        }
        Node Zero_head = new Node(-1);
        Node One_head = new Node(-1);
        Node Two_head = new Node(-1);
        
        Node zero = Zero_head;
        Node one =  One_head;
        Node two =  Two_head;
        
        Node temp = head;
        while ( temp != null){
            if ( temp.data == 0){
                zero.next = temp;
                zero = temp;
            }
            else if( temp.data == 1){
                one.next = temp;
                one = temp;
            }
            else{
                two.next = temp;
                two = temp;
            }
            temp = temp.next;
        }
        zero.next = (One_head.next != null) ? One_head.next : Two_head.next;
        one.next = Two_head.next;
        two.next = null;
        return Zero_head.next;
    }
}
